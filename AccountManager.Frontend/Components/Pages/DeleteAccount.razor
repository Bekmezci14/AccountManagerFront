@inject AccountsClient Client
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="modal fade" id="@GetModalId(Account)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">@title</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="@ConfirmAsync">Save changes</button>
      </div>
    </div>
  </div>
</div>

@code {
    [Parameter]
    public AccountSummary? Account { get; set; }

    private string title = string.Empty;

    protected override void OnParametersSet()
    {
        title = $"Delete Account {Account?.Id}?";
    }

    public static string GetModalId(AccountSummary? account)
    {
        ArgumentNullException.ThrowIfNull(account);
        return $"deleteModal-{account.Id}";
    }

    private async Task ConfirmAsync()
    {
        await Client.DeleteAccountAsync(Account!.Id);
        NavigationManager.Refresh();
    }
}
